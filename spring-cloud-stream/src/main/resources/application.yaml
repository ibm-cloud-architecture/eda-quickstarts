management.endpoint.health.show-details: ALWAYS
management.endpoints.web.exposure.include: metrics,health
spring.application.name: order-spring-ms
server.servlet.context-path: /orderms
spring.cloud.stream:
  bindings:
    orders-out-0:
      destination: orders
      content-type: application/*+avro
      producer:
          useNativeEncoding: true
          message-key-expression: headers['messageKey']
    consumeOrderEvent-in-0:
      destination: orders
      content-type: application/*+avro
      contentType: application/json
      group: orderms-grp
      useNativeDecoding: true
  kafka:
    binder:
      brokers: localhost:9092
      producer-properties:
          key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
          value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
          schema.registry.url: http://localhost:8090/api 
      auto-create-topics: true
      messageKeyExpression: headers['messageKey']
      configuration:
        # Put here properties common to consumer and producer
        security.protocol: PLAINTEXT
    bindings:
      orders-out-0:
        transaction:
          transaction-id-prefix: order-
        producer:
          partition-count: 3
          configuration:
            value.serializer: org.springframework.kafka.support.serializer.JsonSerializer
            acks: all
            retries: 1
            enable.idempotence: true
      consumeOrderEvent-in-0:
        consumer:
          autoCommitOffset: false
          startOffset: latest
          ackMode: MANUAL
          configuration:
            value.deserializer: ibm.eda.demo.infrastructure.events.CloudEventDeserializer
  