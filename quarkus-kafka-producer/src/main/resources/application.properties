# Configuration file
# key = value
app.version=1.0.0
mp.openapi.extensions.smallrye.info.title=Order management service API
mp.openapi.extensions.smallrye.info.version=1.0.0
mp.openapi.extensions.smallrye.info.description=Just an example of event-driven Order management service
mp.openapi.extensions.smallrye.info.termsOfService=Your terms here...
mp.openapi.extensions.smallrye.info.contact.email=techsupport@example.com
mp.openapi.extensions.smallrye.info.contact.name=IBM Automation - Solution Engineering
mp.openapi.extensions.smallrye.info.contact.url=http://https://ibm-cloud-architecture.github.io/refarch-eda/
mp.openapi.extensions.smallrye.info.license.name=Apache 2.0
mp.openapi.extensions.smallrye.info.license.url=https://www.apache.org/licenses/LICENSE-2.0.html

quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.native.additional-build-args =-H:ResourceConfigurationFiles=.*\.json
quarkus.log.category."ibm.eda".level=${EDA_LOGGING_LEVEL:DEBUG}
quarkus.log.category."ibm.eda".min-level=DEBUG
quarkus.native.resources.includes=orders.json
quarkus.swagger-ui.always-include=true
quarkus.kafka.devservices.enabled=false
quarkus.ssl.native=false
quarkus.package.type=fast-jar
quarkus.http.cors=true
quarkus.http.port=8080

#################################
# Source to Image to openshift 
quarkus.openshift.route.expose=true
quarkus.openshift.labels.app=order-cmd-ms
quarkus.openshift.env.configmaps=order-mgr-cm
quarkus.container-image.group=ibmcase
quarkus.container-image.name=eda-qs-order-ms
quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000

quarkus.openshift.env.mapping.KAFKA_SSL_TRUSTSTORE_PASSWORD.from-secret=dev-cluster-ca-cert
quarkus.openshift.env.mapping.KAFKA_SSL_TRUSTSTORE_PASSWORD.with-key=ca.password
quarkus.openshift.mounts.kafka-cert.path=/deployments/certs/server
quarkus.openshift.secret-volumes.kafka-cert.secret-name=dev-cluster-ca-cert
# TLS user
quarkus.openshift.env.mapping.KAFKA_SSL_KEYSTORE_PASSWORD.from-secret=tls-user
quarkus.openshift.env.mapping.KAFKA_SSL_KEYSTORE_PASSWORD.with-key=user.password
quarkus.openshift.mounts.user-cert.path=/deployments/certs/user
quarkus.openshift.secret-volumes.user-cert.secret-name=tls-user

#################################
# Kafka related configuration
kafka.topic.name=orders
kafka.producer.timeout.sec=10
kafka.producer.acks=all
app.producer.prefix.clientid=order-ms
kafka.producer.idempotence=true
kafka.producer.retries=1
kafka.key.serializer= org.apache.kafka.common.serialization.StringSerializer
kafka.producer.transactional.id=orderMgr
#kafka.value.serializer=io.apicurio.registry.utils.serde.AvroKafkaSerializer

%dev.kafka.bootstrap.servers=localhost:9092
%dev.kafka.sasl.mechanism=PLAIN
%prod.kafka.sasl.mechanism=SRAM-SHA-512
%prod.kafka.security.protocol=SSL
%prod.kafka.ssl.protocol=TLSv1.2
%prod.kafka.ssl.truststore.location=/deployments/certs/server/ca.p12
%prod.kafka.ssl.truststore.type=PKCS12
%prod.kafka.ssl.truststore.password=${KAFKA_CERT_PWD}
%prod.kafka.ssl.keystore.location=/deployments/certs/user/user.p12
%prod.kafka.ssl.keystore.password=${USER_CERT_PWD}
%prod.kafka.ssl.keystore.type=PKCS12

#################################
# Schema management
app.producer.schema.groupId=OrderGroup
app.producer.schema.artifactId=OrderEvent-value
# kafka.schema.registry.url=https://user:pwd@urloftheregistry:8090/
quarkus.apicurio-registry.devservices.port=8091
%dev.apicurio.registry.url=http://localhost:8091/api
#apicurio.registry.url=http://localhost:8090/apis/registry/v2

apicurio.registry.use.headers=true
apicurio.avro.encoding=BINARY
apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider
app.apicurio.root.schema.artifactId=OrderEvent
apicurio.registry.artifact.group-id=OrderGroup


