app.version=0.0.1
quarkus.swagger-ui.always-include=true
quarkus.http.port=8080
quarkus.log.console.enable=true
quarkus.log.console.level=INFO

#################################
# Source to Image to openshift 

quarkus.openshift.route.expose=true
quarkus.openshift.env.configmaps=eda-cos-demo-cm
quarkus.container-image.group=ibmcase
quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000
quarkus.container-image.tag=${quarkus.application.version:latest}

quarkus.openshift.labels.app=eda-cos-demo
quarkus.container-image.name=eda-cos-demo
quarkus.openshift.env-vars.SECURE_PROTOCOL.value=PLAINTEXT
quarkus.openshift.env.mapping.KAFKA_SSL_TRUSTSTORE_PASSWORD.from-secret=dev-cluster-ca-cert
quarkus.openshift.env.mapping.KAFKA_SSL_TRUSTSTORE_PASSWORD.with-key=ca.password
quarkus.openshift.env.mapping.JAAS_CFG.from-secret=scram-user
quarkus.openshift.env.mapping.JAAS_CFG.with-key=sasl.jaas.config
quarkus.openshift.mounts.kafka-cert.path=/deployments/certs/server
quarkus.openshift.secret-volumes.kafka-cert.secret-name=dev-cluster-ca-cert
quarkus.openshift.expose=true

##################################
# reactive messaging

%prod.mp.messaging.connector.smallrye-kafka.security.protocol=PLAINTEXT

%prod.mp.messaging.connector.smallrye-kafka.ssl.protocol=TLSv1.2
%prod.mp.messaging.connector.smallrye-kafka.ssl.truststore.type=PKCS12
%prod.mp.messaging.connector.smallrye-kafka.ssl.truststore.location=/deployments/certs/server/ca.p12
%prod.mp.messaging.connector.smallrye-kafka.ssl.truststore.password=${KAFKA_SSL_TRUSTSTORE_PASSWORD}

%prod.mp.messaging.connector.smallrye-kafka.sasl.jaas.config=${JAAS_CFG}

mp.messaging.outgoing.orders.connector=smallrye-kafka
mp.messaging.outgoing.orders.topic=orders
mp.messaging.outgoing.orders.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.orders.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.orders.cloud-events-type=Order
mp.messaging.outgoing.orders.cloud-events-source=https://github.com/ibm-cloud-architecture/eda-quickstarts/cos-tutorial
mp.messaging.outgoing.orders.cloud-events-subject=TLOGgenerator
mp.messaging.outgoing.orders.waitForWriteCompletion=true